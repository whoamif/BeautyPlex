import { ReactElement, MutableRefObject } from 'react';
import Swiper, { SwiperOptions, SelectableElement as SwiperSelectableElement, SwiperModule } from 'swiper';
declare type Maybe<T> = T | null;
export declare type ReactIdSwiperRenderProps = (props: ReactIdSwiperProps) => Maybe<ReactElement>;
export declare type WrappedElementType = 'div' | 'section' | 'span';
export declare type ReactIdSwiperChildren = ReactElement | ReactElement[];
export declare type SwiperModules = (SwiperModule & {
    name: string;
})[];
export interface ReactIdSwiperProps extends SwiperOptions {
    ContainerEl?: WrappedElementType;
    WrapperEl?: WrappedElementType;
    containerClass?: string;
    wrapperClass?: string;
    slideClass?: string;
    rebuildOnUpdate?: boolean;
    shouldSwiperUpdate?: boolean;
    activeSlideKey?: string;
    renderScrollbar?: ReactIdSwiperRenderProps;
    renderPagination?: ReactIdSwiperRenderProps;
    renderPrevButton?: ReactIdSwiperRenderProps;
    renderNextButton?: ReactIdSwiperRenderProps;
    renderParallax?: ReactIdSwiperRenderProps;
    rtl?: string;
    children?: ReactIdSwiperChildren;
    parallaxEl?: {
        el: string;
        value: string;
    };
}
export interface ReactIdSwiperCustomProps extends ReactIdSwiperProps {
    modules?: SwiperModules;
    Swiper: typeof Swiper;
}
export interface SwiperRefNode extends HTMLDivElement {
    swiper?: SwiperInstance;
}
export declare type SelectableElement = SwiperSelectableElement | undefined;
export declare type SwiperInstance = Maybe<Swiper>;
export declare type RefType<T> = Maybe<((instance: Maybe<T>) => void) | MutableRefObject<Maybe<T>>>;
export declare type SetRef = <V>(ref: RefType<V>, value: V) => void;
export declare type UseForkRef = <T>(refA: RefType<T>, refB: RefType<T>) => Maybe<(v: T) => void>;
export declare type SwiperModuleName = 'navigation' | 'pagination' | 'scrollbar' | 'autoplay' | 'parallax' | 'lazy' | 'effect-fade' | 'effect-coverflow' | 'effect-flip' | 'effect-cube' | 'zoom' | 'keyboard' | 'mousewheel' | 'virtual' | 'hash-navigation' | 'history' | 'controller' | 'a11y';
export {};
