{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/BeautyPlex/app - Copy/src/Forme.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = ['Algiers', 'Oran', 'Constantine', 'Annaba'\n// Add more cities here...\n];\nconst Forme = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const handleSubmit = async e => {\n    // Use async function for asynchronous requests\n    e.preventDefault();\n    try {\n      const formData = {\n        name,\n        email,\n        selectedCity\n      };\n      const response = await axios.post('http://localhost:8000/submit-form/', formData); // Change URL to match your FastAPI server\n      console.log('Form submitted successfully:', response.data);\n      // You can add your logic here to handle successful form submission\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // You can add your logic here to handle errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"city\",\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Forme, \"3FT04FL7YSbvXaW3ty8ZWguwmHU=\");\n_c = Forme;\nexport default Forme;\nvar _c;\n$RefreshReg$(_c, \"Forme\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","cities","Forme","_s","name","setName","email","setEmail","selectedCity","setSelectedCity","handleSubmit","e","preventDefault","formData","response","post","console","log","data","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","map","city","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/BeautyPlex/app - Copy/src/Forme.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios for making HTTP requests\n\nconst cities = [\n  'Algiers',\n  'Oran',\n  'Constantine',\n  'Annaba',\n  // Add more cities here...\n];\n\nconst Forme = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n\n  const handleSubmit = async (e) => { // Use async function for asynchronous requests\n    e.preventDefault();\n    try {\n      const formData = { name, email, selectedCity };\n      const response = await axios.post('http://localhost:8000/submit-form/', formData); // Change URL to match your FastAPI server\n      console.log('Form submitted successfully:', response.data);\n      // You can add your logic here to handle successful form submission\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // You can add your logic here to handle errors\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City:</label>\n        <select\n          id=\"city\"\n          value={selectedCity}\n          onChange={(e) => setSelectedCity(e.target.value)}\n          required\n        >\n          <option value=\"\">Select a city</option>\n          {cities.map((city) => (\n            <option key={city} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Forme;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}